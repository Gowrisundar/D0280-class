[student@workstation ~]$ lab start auth-providers 
FAIL    Waiting for cluster
        - The step has failed
        - An unexpected error ocurred: Timed out
        - Check the log file for more details
        - An unexpected error ocurred: The 'Waiting for cluster' fatal step has failed. 
        - Check /tmp/log/labs/auth-providers or use the 'lab logs' command for details.
        - Cannot continue lab script

An error has occurred. For more details, run: lab logs auth-providers
[student@workstation ~]$ lab start auth-providers 
SUCCESS Waiting for cluster
SUCCESS Copy exercise files
SUCCESS Remove auth-providers project
SUCCESS Remove cluster admin role
SUCCESS Remove secret auth-review
SUCCESS Remove HTPasswd secret
SUCCESS Reset identity provider
SUCCESS Removing all users
SUCCESS Removing all identities
SUCCESS Removing authentication pods
SUCCESS Waiting for authentication to work
[student@workstation ~]$ oc whoami
error: Missing or incomplete configuration info.  Please point to an existing, complete config file:


  1. Via the command-line flag --kubeconfig
  2. Via the KUBECONFIG environment variable
  3. In your home directory as ~/.kube/config

To view or setup config directly use the 'config' command.
[student@workstation ~]$ oc login
Server [https://localhost:8443]: exit
error: dial tcp: lookup exit on 172.25.250.254:53: no such host - verify you have provided the correct host and port and that the server is currently running.
[student@workstation ~]$ oc login -u admin -p redhatocp https://api.ocp4.example.com:6443
Login successful.

You have access to 71 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "default".
Welcome! See 'oc help' to get started.
[student@workstation ~]$ oc whoami
admin
[student@workstation ~]$ oc whoami -t
sha256~N2czFWafQuBvJ3x9caA7TrNZenQKhAPMO6uNynTgPU8
[student@workstation ~]$ oc login -u developer -p developer
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation ~]$ cat .kube/config 
apiVersion: v1
clusters:
- cluster:
    server: https://api.ocp4.example.com:6443
  name: api-ocp4-example-com:6443
contexts:
- context:
    cluster: api-ocp4-example-com:6443
    user: developer/api-ocp4-example-com:6443
  name: /api-ocp4-example-com:6443/developer
- context:
    cluster: api-ocp4-example-com:6443
    namespace: default
    user: admin/api-ocp4-example-com:6443
  name: default/api-ocp4-example-com:6443/admin
current-context: /api-ocp4-example-com:6443/developer
kind: Config
preferences: {}
users:
- name: admin/api-ocp4-example-com:6443
  user:
    token: sha256~N2czFWafQuBvJ3x9caA7TrNZenQKhAPMO6uNynTgPU8
- name: developer/api-ocp4-example-com:6443
  user:
    token: sha256~q9l-eH_nGuMsV1s1qrDWPMwxggwTOj5D6H55EqXFxQk
[student@workstation ~]$ oc login -u admin -p redhatocp
Login successful.

You have access to 71 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "default".
[student@workstation ~]$ cat .kube/config 
apiVersion: v1
clusters:
- cluster:
    server: https://api.ocp4.example.com:6443
  name: api-ocp4-example-com:6443
contexts:
- context:
    cluster: api-ocp4-example-com:6443
    user: developer/api-ocp4-example-com:6443
  name: /api-ocp4-example-com:6443/developer
- context:
    cluster: api-ocp4-example-com:6443
    namespace: default
    user: admin/api-ocp4-example-com:6443
  name: default/api-ocp4-example-com:6443/admin
current-context: default/api-ocp4-example-com:6443/admin
kind: Config
preferences: {}
users:
- name: admin/api-ocp4-example-com:6443
  user:
    token: sha256~RVE6NxqLHPcK3ghz43czeqbzaeCuyU3mzqkoNtbFn8g
- name: developer/api-ocp4-example-com:6443
  user:
    token: sha256~q9l-eH_nGuMsV1s1qrDWPMwxggwTOj5D6H55EqXFxQk
[student@workstation ~]$ oc new-project classA
The ProjectRequest "classA" is invalid: metadata.name: Invalid value: "classA": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?')
[student@workstation ~]$ oc new-project classa
Now using project "classa" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
No resources found in classa namespace.
[student@workstation ~]$ oc new-app --name myweb --image quay.io/redhattraining/hello-world-nginx
--> Found container image 44eaa13 (6 years old) from quay.io for "quay.io/redhattraining/hello-world-nginx"

    Red Hat Universal Base Image 8 
    ------------------------------ 
    The Universal Base Image is designed and engineered to be the base layer for all of your containerized applications, middleware and utilities. This base image is freely redistributable, but Red Hat only supports Red Hat technologies through subscriptions for Red Hat products. This image is maintained by Red Hat and updated regularly.

    Tags: base rhel8

    * An image stream tag will be created as "myweb:latest" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "myweb" created
    deployment.apps "myweb" created
    service "myweb" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/myweb' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
NAME                         READY   STATUS    RESTARTS   AGE
pod/myweb-7b4f54c5d6-qdfgj   1/1     Running   0          24s

NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
service/myweb   ClusterIP   172.30.240.212   <none>        8080/TCP   25s

NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/myweb   1/1     1            1           25s

NAME                               DESIRED   CURRENT   READY   AGE
replicaset.apps/myweb-7885c46984   0         0         0       25s
replicaset.apps/myweb-7b4f54c5d6   1         1         1       24s

NAME                                   IMAGE REPOSITORY                                                TAGS     UPDATED
imagestream.image.openshift.io/myweb   image-registry.openshift-image-registry.svc:5000/classa/myweb   latest   25 seconds ago
[student@workstation ~]$ oc describe deployment myweb 
Name:                   myweb
Namespace:              classa
CreationTimestamp:      Fri, 22 Aug 2025 01:57:57 -0400
Labels:                 app=myweb
                        app.kubernetes.io/component=myweb
                        app.kubernetes.io/instance=myweb
Annotations:            deployment.kubernetes.io/revision: 2
                        image.openshift.io/triggers:
                          [{"from":{"kind":"ImageStreamTag","name":"myweb:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"myweb\")].image"}]
                        openshift.io/generated-by: OpenShiftNewApp
Selector:               deployment=myweb
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:       deployment=myweb
  Annotations:  openshift.io/generated-by: OpenShiftNewApp
  Containers:
   myweb:
    Image:        quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Port:         8080/TCP
    Host Port:    0/TCP
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  myweb-7885c46984 (0/0 replicas created)
NewReplicaSet:   myweb-7b4f54c5d6 (1/1 replicas created)
Events:
  Type    Reason             Age    From                   Message
  ----    ------             ----   ----                   -------
  Normal  ScalingReplicaSet  4m54s  deployment-controller  Scaled up replica set myweb-7885c46984 to 1
  Normal  ScalingReplicaSet  4m53s  deployment-controller  Scaled up replica set myweb-7b4f54c5d6 to 1
  Normal  ScalingReplicaSet  4m35s  deployment-controller  Scaled down replica set myweb-7885c46984 to 0 from 1
[student@workstation ~]$ oc get pods
NAME                     READY   STATUS    RESTARTS   AGE
myweb-7b4f54c5d6-qdfgj   1/1     Running   0          7m11s
[student@workstation ~]$ oc get pods -o wide
NAME                     READY   STATUS    RESTARTS   AGE     IP           NODE       NOMINATED NODE   READINESS GATES
myweb-7b4f54c5d6-qdfgj   1/1     Running   0          7m30s   10.8.0.107   master01   <none>           <none>
[student@workstation ~]$ oc edit deployment myweb
deployment.apps/myweb edited
[student@workstation ~]$ oc get pods
NAME                     READY   STATUS    RESTARTS   AGE
myweb-7b4f54c5d6-hlfzs   1/1     Running   0          3s
myweb-7b4f54c5d6-qdfgj   1/1     Running   0          8m53s
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
NAME                         READY   STATUS    RESTARTS   AGE
pod/myweb-7b4f54c5d6-hlfzs   1/1     Running   0          10s
pod/myweb-7b4f54c5d6-qdfgj   1/1     Running   0          9m

NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
service/myweb   ClusterIP   172.30.240.212   <none>        8080/TCP   9m1s

NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/myweb   2/2     2            2           9m1s

NAME                               DESIRED   CURRENT   READY   AGE
replicaset.apps/myweb-7885c46984   0         0         0       9m1s
replicaset.apps/myweb-7b4f54c5d6   2         2         2       9m

NAME                                   IMAGE REPOSITORY                                                TAGS     UPDATED
imagestream.image.openshift.io/myweb   image-registry.openshift-image-registry.svc:5000/classa/myweb   latest   9 minutes ago
[student@workstation ~]$ oc describe deployment myweb
Name:                   myweb
Namespace:              classa
CreationTimestamp:      Fri, 22 Aug 2025 01:57:57 -0400
Labels:                 app=myweb
                        app.kubernetes.io/component=myweb
                        app.kubernetes.io/instance=myweb
Annotations:            deployment.kubernetes.io/revision: 2
                        image.openshift.io/triggers:
                          [{"from":{"kind":"ImageStreamTag","name":"myweb:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"myweb\")].image"}]
                        openshift.io/generated-by: OpenShiftNewApp
Selector:               deployment=myweb
Replicas:               2 desired | 2 updated | 2 total | 2 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:       deployment=myweb
  Annotations:  openshift.io/generated-by: OpenShiftNewApp
  Containers:
   myweb:
    Image:        quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Port:         8080/TCP
    Host Port:    0/TCP
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Progressing    True    NewReplicaSetAvailable
  Available      True    MinimumReplicasAvailable
OldReplicaSets:  myweb-7885c46984 (0/0 replicas created)
NewReplicaSet:   myweb-7b4f54c5d6 (2/2 replicas created)
Events:
  Type    Reason             Age    From                   Message
  ----    ------             ----   ----                   -------
  Normal  ScalingReplicaSet  10m    deployment-controller  Scaled up replica set myweb-7885c46984 to 1
  Normal  ScalingReplicaSet  10m    deployment-controller  Scaled up replica set myweb-7b4f54c5d6 to 1
  Normal  ScalingReplicaSet  9m44s  deployment-controller  Scaled down replica set myweb-7885c46984 to 0 from 1
  Normal  ScalingReplicaSet  72s    deployment-controller  Scaled up replica set myweb-7b4f54c5d6 to 2 from 1
[student@workstation ~]$ oc describe pod myweb-7b4f54c5d6-
myweb-7b4f54c5d6-hlfzs  myweb-7b4f54c5d6-qdfgj  
[student@workstation ~]$ oc describe pod myweb-7b4f54c5d6-
myweb-7b4f54c5d6-hlfzs  myweb-7b4f54c5d6-qdfgj  
[student@workstation ~]$ oc describe pod myweb-7b4f54c5d6-hlfzs myweb-7b4f54c5d6-qdfgj 
Name:             myweb-7b4f54c5d6-hlfzs
Namespace:        classa
Priority:         0
Service Account:  default
Node:             master01/192.168.50.10
Start Time:       Fri, 22 Aug 2025 02:06:48 -0400
Labels:           deployment=myweb
                  pod-template-hash=7b4f54c5d6
Annotations:      k8s.ovn.org/pod-networks:
                    {"default":{"ip_addresses":["10.8.0.109/23"],"mac_address":"0a:58:0a:08:00:6d","gateway_ips":["10.8.0.1"],"routes":[{"dest":"10.8.0.0/14",...
                  k8s.v1.cni.cncf.io/network-status:
                    [{
                        "name": "ovn-kubernetes",
                        "interface": "eth0",
                        "ips": [
                            "10.8.0.109"
                        ],
                        "mac": "0a:58:0a:08:00:6d",
                        "default": true,
                        "dns": {}
                    }]
                  openshift.io/generated-by: OpenShiftNewApp
                  openshift.io/scc: restricted-v2
                  seccomp.security.alpha.kubernetes.io/pod: runtime/default
Status:           Running
SeccompProfile:   RuntimeDefault
IP:               10.8.0.109
IPs:
  IP:           10.8.0.109
Controlled By:  ReplicaSet/myweb-7b4f54c5d6
Containers:
  myweb:
    Container ID:   cri-o://9b048d759fd3e5f3ca6fcd24c92cfa472bbe8878a352d3772382b7ee7b1df31c
    Image:          quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Image ID:       quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Port:           8080/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Fri, 22 Aug 2025 02:06:49 -0400
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-v6mxt (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-v6mxt:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
    ConfigMapName:           openshift-service-ca.crt
    ConfigMapOptional:       <nil>
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason          Age   From               Message
  ----    ------          ----  ----               -------
  Normal  Scheduled       4m3s  default-scheduler  Successfully assigned classa/myweb-7b4f54c5d6-hlfzs to master01
  Normal  AddedInterface  4m3s  multus             Add eth0 [10.8.0.109/23] from ovn-kubernetes
  Normal  Pulled          4m2s  kubelet            Container image "quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b" already present on machine
  Normal  Created         4m2s  kubelet            Created container myweb
  Normal  Started         4m2s  kubelet            Started container myweb


Name:             myweb-7b4f54c5d6-qdfgj
Namespace:        classa
Priority:         0
Service Account:  default
Node:             master01/192.168.50.10
Start Time:       Fri, 22 Aug 2025 01:57:58 -0400
Labels:           deployment=myweb
                  pod-template-hash=7b4f54c5d6
Annotations:      k8s.ovn.org/pod-networks:
                    {"default":{"ip_addresses":["10.8.0.107/23"],"mac_address":"0a:58:0a:08:00:6b","gateway_ips":["10.8.0.1"],"routes":[{"dest":"10.8.0.0/14",...
                  k8s.v1.cni.cncf.io/network-status:
                    [{
                        "name": "ovn-kubernetes",
                        "interface": "eth0",
                        "ips": [
                            "10.8.0.107"
                        ],
                        "mac": "0a:58:0a:08:00:6b",
                        "default": true,
                        "dns": {}
                    }]
                  openshift.io/generated-by: OpenShiftNewApp
                  openshift.io/scc: restricted-v2
                  seccomp.security.alpha.kubernetes.io/pod: runtime/default
Status:           Running
SeccompProfile:   RuntimeDefault
IP:               10.8.0.107
IPs:
  IP:           10.8.0.107
Controlled By:  ReplicaSet/myweb-7b4f54c5d6
Containers:
  myweb:
    Container ID:   cri-o://befe7984d3553df70554497ad0df59d0ba1096c279cee4d64761474a322e6f91
    Image:          quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Image ID:       quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Port:           8080/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Fri, 22 Aug 2025 01:58:14 -0400
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-478mv (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-478mv:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
    ConfigMapName:           openshift-service-ca.crt
    ConfigMapOptional:       <nil>
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason          Age   From               Message
  ----    ------          ----  ----               -------
  Normal  Scheduled       12m   default-scheduler  Successfully assigned classa/myweb-7b4f54c5d6-qdfgj to master01
  Normal  AddedInterface  12m   multus             Add eth0 [10.8.0.107/23] from ovn-kubernetes
  Normal  Pulling         12m   kubelet            Pulling image "quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b"
  Normal  Pulled          12m   kubelet            Successfully pulled image "quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b" in 15.090644083s (15.090704178s including waiting)
  Normal  Created         12m   kubelet            Created container myweb
  Normal  Started         12m   kubelet            Started container myweb
[student@workstation ~]$ oc describe pod myweb-7b4f54c5d6-hlfzs
Name:             myweb-7b4f54c5d6-hlfzs
Namespace:        classa
Priority:         0
Service Account:  default
Node:             master01/192.168.50.10
Start Time:       Fri, 22 Aug 2025 02:06:48 -0400
Labels:           deployment=myweb
                  pod-template-hash=7b4f54c5d6
Annotations:      k8s.ovn.org/pod-networks:
                    {"default":{"ip_addresses":["10.8.0.109/23"],"mac_address":"0a:58:0a:08:00:6d","gateway_ips":["10.8.0.1"],"routes":[{"dest":"10.8.0.0/14",...
                  k8s.v1.cni.cncf.io/network-status:
                    [{
                        "name": "ovn-kubernetes",
                        "interface": "eth0",
                        "ips": [
                            "10.8.0.109"
                        ],
                        "mac": "0a:58:0a:08:00:6d",
                        "default": true,
                        "dns": {}
                    }]
                  openshift.io/generated-by: OpenShiftNewApp
                  openshift.io/scc: restricted-v2
                  seccomp.security.alpha.kubernetes.io/pod: runtime/default
Status:           Running
SeccompProfile:   RuntimeDefault
IP:               10.8.0.109
IPs:
  IP:           10.8.0.109
Controlled By:  ReplicaSet/myweb-7b4f54c5d6
Containers:
  myweb:
    Container ID:   cri-o://9b048d759fd3e5f3ca6fcd24c92cfa472bbe8878a352d3772382b7ee7b1df31c
    Image:          quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Image ID:       quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Port:           8080/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Fri, 22 Aug 2025 02:06:49 -0400
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-v6mxt (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-v6mxt:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
    ConfigMapName:           openshift-service-ca.crt
    ConfigMapOptional:       <nil>
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason          Age    From               Message
  ----    ------          ----   ----               -------
  Normal  Scheduled       7m55s  default-scheduler  Successfully assigned classa/myweb-7b4f54c5d6-hlfzs to master01
  Normal  AddedInterface  7m56s  multus             Add eth0 [10.8.0.109/23] from ovn-kubernetes
  Normal  Pulled          7m55s  kubelet            Container image "quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b" already present on machine
  Normal  Created         7m55s  kubelet            Created container myweb
  Normal  Started         7m55s  kubelet            Started container myweb
[student@workstation ~]$ oc describe pod myweb-7b4f54c5d6-hlfzs | grep ip
                    {"default":{"ip_addresses":["10.8.0.109/23"],"mac_address":"0a:58:0a:08:00:6d","gateway_ips":["10.8.0.1"],"routes":[{"dest":"10.8.0.0/14",...
                        "ips": [
    Type:                    Projected (a volume that contains injected data from multiple sources)
[student@workstation ~]$ oc describe pod myweb-7b4f54c5d6- | grep ip
myweb-7b4f54c5d6-hlfzs  myweb-7b4f54c5d6-qdfgj  
[student@workstation ~]$ oc describe pod myweb-7b4f54c5d6-qdfgj | grep ip
                    {"default":{"ip_addresses":["10.8.0.107/23"],"mac_address":"0a:58:0a:08:00:6b","gateway_ips":["10.8.0.1"],"routes":[{"dest":"10.8.0.0/14",...
                        "ips": [
    Type:                    Projected (a volume that contains injected data from multiple sources)
[student@workstation ~]$ oc delete pod myweb-7b4f54c5d6-qdfgj 
pod "myweb-7b4f54c5d6-qdfgj" deleted
[student@workstation ~]$ oc get pod
NAME                     READY   STATUS    RESTARTS   AGE
myweb-7b4f54c5d6-hlfzs   1/1     Running   0          9m7s
myweb-7b4f54c5d6-vlmrw   1/1     Running   0          13s
[student@workstation ~]$ oc describe pod myweb-7b4f54c5d6-vlmrw | grep ip
                    {"default":{"ip_addresses":["10.8.0.111/23"],"mac_address":"0a:58:0a:08:00:6f","gateway_ips":["10.8.0.1"],"routes":[{"dest":"10.8.0.0/14",...
                        "ips": [
    Type:                    Projected (a volume that contains injected data from multiple sources)
[student@workstation ~]$ oc get svc
NAME    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
myweb   ClusterIP   172.30.240.212   <none>        8080/TCP   20m
[student@workstation ~]$ oc get endpoints
NAME    ENDPOINTS                         AGE
myweb   10.8.0.109:8080,10.8.0.111:8080   28m
[student@workstation ~]$ curl 10.8.0.109:8080
^[z^[x^[c^[c^[c^[c^[x^C
[student@workstation ~]$ oc expose service myweb --t
--target-port      (Name or number for the port on the container that the service should di…)
--template         (Template string or path to template file to use when -o=go-template, -o…)
--tls-server-name  (Server name to use for server certificate validation. If it is not prov…)
--token            (Bearer token for authentication to the API server)
--type             (Type for this service: ClusterIP, NodePort, LoadBalancer, or ExternalNa…)
[student@workstation ~]$ oc expose service myweb --t
--target-port      (Name or number for the port on the container that the service should di…)
--template         (Template string or path to template file to use when -o=go-template, -o…)
--tls-server-name  (Server name to use for server certificate validation. If it is not prov…)
--token            (Bearer token for authentication to the API server)
--type             (Type for this service: ClusterIP, NodePort, LoadBalancer, or ExternalNa…)
[student@workstation ~]$ oc expose service myweb --t
--target-port      (Name or number for the port on the container that the service should di…)
--template         (Template string or path to template file to use when -o=go-template, -o…)
--tls-server-name  (Server name to use for server certificate validation. If it is not prov…)
--token            (Bearer token for authentication to the API server)
--type             (Type for this service: ClusterIP, NodePort, LoadBalancer, or ExternalNa…)
[student@workstation ~]$ oc expose service myweb --t
--target-port      (Name or number for the port on the container that the service should di…)
--template         (Template string or path to template file to use when -o=go-template, -o…)
--tls-server-name  (Server name to use for server certificate validation. If it is not prov…)
--token            (Bearer token for authentication to the API server)
--type             (Type for this service: ClusterIP, NodePort, LoadBalancer, or ExternalNa…)
[student@workstation ~]$ oc expose service myweb --t
--target-port      (Name or number for the port on the container that the service should di…)
--template         (Template string or path to template file to use when -o=go-template, -o…)
--tls-server-name  (Server name to use for server certificate validation. If it is not prov…)
--token            (Bearer token for authentication to the API server)
--type             (Type for this service: ClusterIP, NodePort, LoadBalancer, or ExternalNa…)
[student@workstation ~]$ oc expose service myweb --t
--target-port      (Name or number for the port on the container that the service should di…)
--template         (Template string or path to template file to use when -o=go-template, -o…)
--tls-server-name  (Server name to use for server certificate validation. If it is not prov…)
--token            (Bearer token for authentication to the API server)
--type             (Type for this service: ClusterIP, NodePort, LoadBalancer, or ExternalNa…)
[student@workstation ~]$ oc expose service myweb
route.route.openshift.io/myweb exposed
[student@workstation ~]$ oc get route
NAME    HOST/PORT                            PATH   SERVICES   PORT       TERMINATION   WILDCARD
myweb   myweb-classa.apps.ocp4.example.com          myweb      8080-tcp                 None
[student@workstation ~]$ curl myweb-classa.apps.ocp4.example.com
<html>
  <body>
    <h1>Hello, world from nginx!</h1>
  </body>
</html>
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
NAME                         READY   STATUS    RESTARTS   AGE
pod/myweb-7b4f54c5d6-hlfzs   1/1     Running   0          23m
pod/myweb-7b4f54c5d6-vlmrw   1/1     Running   0          14m

NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
service/myweb   ClusterIP   172.30.240.212   <none>        8080/TCP   32m

NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/myweb   2/2     2            2           32m

NAME                               DESIRED   CURRENT   READY   AGE
replicaset.apps/myweb-7885c46984   0         0         0       32m
replicaset.apps/myweb-7b4f54c5d6   2         2         2       32m

NAME                                   IMAGE REPOSITORY                                                TAGS     UPDATED
imagestream.image.openshift.io/myweb   image-registry.openshift-image-registry.svc:5000/classa/myweb   latest   32 minutes ago

NAME                             HOST/PORT                            PATH   SERVICES   PORT       TERMINATION   WILDCARD
route.route.openshift.io/myweb   myweb-classa.apps.ocp4.example.com          myweb      8080-tcp                 None
[student@workstation ~]$ oc get sa
NAME       SECRETS   AGE
builder    1         35m
default    1         35m
deployer   1         35m
[student@workstation ~]$ oc describe route myweb 
Name:			myweb
Namespace:		classa
Created:		2 minutes ago
Labels:			app=myweb
			app.kubernetes.io/component=myweb
			app.kubernetes.io/instance=myweb
Annotations:		openshift.io/host.generated=true
Requested Host:		myweb-classa.apps.ocp4.example.com
			   exposed on router default (host router-default.apps.ocp4.example.com) 2 minutes ago
Path:			<none>
TLS Termination:	<none>
Insecure Policy:	<none>
Endpoint Port:		8080-tcp

Service:	myweb
Weight:		100 (100%)
Endpoints:	10.8.0.109:8080, 10.8.0.111:8080
[student@workstation ~]$ oc describe deployment myweb | grep -i labels
Labels:                 app=myweb
  Labels:       deployment=myweb
[student@workstation ~]$ oc describe service myweb | grep -i labels
Labels:            app=myweb
[student@workstation ~]$ oc new-project classb
Now using project "classb" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
No resources found in classb namespace.
[student@workstation ~]$ oc get pods -n classa
NAME                     READY   STATUS    RESTARTS   AGE
myweb-7b4f54c5d6-hlfzs   1/1     Running   0          29m
myweb-7b4f54c5d6-vlmrw   1/1     Running   0          20m
[student@workstation ~]$ oc edit deployment myweb -n classa
deployment.apps/myweb edited
[student@workstation ~]$ oc get pods -n classa
NAME                     READY   STATUS    RESTARTS   AGE
myweb-7b4f54c5d6-hlfzs   1/1     Running   0          31m
myweb-7b4f54c5d6-vlmrw   1/1     Running   0          22m
myweb-7b4f54c5d6-xjx6h   1/1     Running   0          8s
[student@workstation ~]$ oc project classa
Now using project "classa" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ vim password
[student@workstation ~]$ oc create secret generic mysecret --from-literal passwd=redhat
secret/mysecret created
[student@workstation ~]$ oc get secrets
NAME                       TYPE                                  DATA   AGE
builder-dockercfg-sg2ch    kubernetes.io/dockercfg               1      51m
builder-token-t87gp        kubernetes.io/service-account-token   4      51m
default-dockercfg-zm4dz    kubernetes.io/dockercfg               1      51m
default-token-bwch2        kubernetes.io/service-account-token   4      51m
deployer-dockercfg-xz4r5   kubernetes.io/dockercfg               1      51m
deployer-token-f82cx       kubernetes.io/service-account-token   4      51m
mysecret                   Opaque                                1      8s
[student@workstation ~]$ oc describe se
secrets
securitycontextconstraints.security.openshift.io
serviceaccounts
servicecas.operator.openshift.io
servicemonitors.monitoring.coreos.com
services
[student@workstation ~]$ oc describe secrets mysecret 
Name:         mysecret
Namespace:    classa
Labels:       <none>
Annotations:  <none>

Type:  Opaque

Data
====
passwd:  6 bytes
[student@workstation ~]$ oc create secret generic mysecret1 --from-file secret=password
secret/mysecret1 created
[student@workstation ~]$ oc describe secrets mysecret1 
Name:         mysecret1
Namespace:    classa
Labels:       <none>
Annotations:  <none>

Type:  Opaque

Data
====
secret:  10 bytes
[student@workstation ~]$ oc create configmap myconfig --from-literal CONFIG=dummyconfig
configmap/myconfig created
[student@workstation ~]$ oc describe myconfig  myconfig
error: the server doesn't have a resource type "myconfig"
[student@workstation ~]$ oc describe configmap  myconfig
Name:         myconfig
Namespace:    classa
Labels:       <none>
Annotations:  <none>

Data
====
CONFIG:
----
dummyconfig

BinaryData
====

Events:  <none>
[student@workstation ~]$ oc get pods
NAME                     READY   STATUS    RESTARTS   AGE
myweb-7b4f54c5d6-hlfzs   1/1     Running   0          49m
myweb-7b4f54c5d6-vlmrw   1/1     Running   0          41m
myweb-7b4f54c5d6-xjx6h   1/1     Running   0          18m
[student@workstation ~]$ oc create sa myserviceaccount
serviceaccount/myserviceaccount created
[student@workstation ~]$ oc get sa
NAME               SECRETS   AGE
builder            1         61m
default            1         61m
deployer           1         61m
myserviceaccount   1         8s
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
NAME                         READY   STATUS    RESTARTS   AGE
pod/myweb-7b4f54c5d6-hlfzs   1/1     Running   0          50m
pod/myweb-7b4f54c5d6-vlmrw   1/1     Running   0          41m
pod/myweb-7b4f54c5d6-xjx6h   1/1     Running   0          19m

NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
service/myweb   ClusterIP   172.30.240.212   <none>        8080/TCP   59m

NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/myweb   3/3     3            3           59m

NAME                               DESIRED   CURRENT   READY   AGE
replicaset.apps/myweb-7885c46984   0         0         0       59m
replicaset.apps/myweb-7b4f54c5d6   3         3         3       59m

NAME                                   IMAGE REPOSITORY                                                TAGS     UPDATED
imagestream.image.openshift.io/myweb   image-registry.openshift-image-registry.svc:5000/classa/myweb   latest   59 minutes ago

NAME                             HOST/PORT                            PATH   SERVICES   PORT       TERMINATION   WILDCARD
route.route.openshift.io/myweb   myweb-classa.apps.ocp4.example.com          myweb      8080-tcp                 None
[student@workstation ~]$ oc project classb
Now using project "classb" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc create deployment mynginx --image quay.io/redhattraining/hello-worls-nginx --save-config --dry-run client -o yaml > deploy.yml
error: exactly one NAME is required, got 2
See 'oc create deployment -h' for help and examples
[student@workstation ~]$ oc create deployment --name mynginx --image quay.io/redhattraining/hello-worls-nginx --save-config --dry-run client -o yaml > deploy.yml
error: unknown flag: --name
See 'oc create deployment --help' for usage.
[student@workstation ~]$ oc create deployment mynginx --image quay.io/redhattraining/hello-worls-nginx --save-config --dry-run=client -o yaml > deploy.yml
[student@workstation ~]$ ls
DO280    Documents  Music     Public     Videos      password
Desktop  Downloads  Pictures  Templates  deploy.yml
[student@workstation ~]$ cat deploy.yml 
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"mynginx","creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mynginx"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"containers":[{"name":"hello-worls-nginx","image":"quay.io/redhattraining/hello-worls-nginx","resources":{}}]}},"strategy":{}},"status":{}}
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mynginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mynginx
    spec:
      containers:
      - image: quay.io/redhattraining/hello-worls-nginx
        name: hello-worls-nginx
        resources: {}
status: {}
[student@workstation ~]$ oc create -f deploy.yml 
deployment.apps/mynginx created
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
NAME                           READY   STATUS              RESTARTS   AGE
pod/mynginx-6448d57877-5bwbn   0/1     ContainerCreating   0          4s

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/mynginx   0/1     1            0           4s

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/mynginx-6448d57877   1         1         0       4s
[student@workstation ~]$ vim deploy.yml 
[student@workstation ~]$ oc apply -f deploy.yml 
deployment.apps/mynginx configured
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
NAME                           READY   STATUS              RESTARTS   AGE
pod/mynginx-6448d57877-4n77g   0/1     ContainerCreating   0          3s
pod/mynginx-6448d57877-5bwbn   0/1     ErrImagePull        0          62s

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/mynginx   0/2     2            0           62s

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/mynginx-6448d57877   2         2         0       62s
[student@workstation ~]$ oc create service clusterip mynginx --t
--tcp              (Port pairs can be specified as '<port>:<targetPort>'.)
--template         (Template string or path to template file to use when -o=go-template, -o…)
--tls-server-name  (Server name to use for server certificate validation. If it is not prov…)
--token            (Bearer token for authentication to the API server)
[student@workstation ~]$ oc create service clusterip mynginx --tcp 8080:8080 --save-config dry-run=client -o yml > service.yml
error: exactly one NAME is required, got 2
See 'oc create service clusterip -h' for help and examples
[student@workstation ~]$ oc create service clusterip mynginx --tcp 8080:8080 --save-config dry-run=client -o yaml > service.yml
error: exactly one NAME is required, got 2
See 'oc create service clusterip -h' for help and examples
[student@workstation ~]$ oc create se
secret          (Create a secret using specified subcommand)
service         (Create a service using a specified subcommand)
serviceaccount  (Create a service account with the specified name)
[student@workstation ~]$ oc create se
secret          (Create a secret using specified subcommand)
service         (Create a service using a specified subcommand)
serviceaccount  (Create a service account with the specified name)
[student@workstation ~]$ oc create service clusterip mynginx --tcp 8080:8080 --save-config --dry-run=client -o yaml > service.yml
[student@workstation ~]$ oc get svc
No resources found in classb namespace.
[student@workstation ~]$ oc create -f service.yml
service/mynginx created
[student@workstation ~]$ oc get svc
NAME      TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
mynginx   ClusterIP   172.30.78.164   <none>        8080/TCP   4s
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
NAME                           READY   STATUS             RESTARTS   AGE
pod/mynginx-6448d57877-4n77g   0/1     ErrImagePull       0          6m7s
pod/mynginx-6448d57877-5bwbn   0/1     ImagePullBackOff   0          7m6s

NAME              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/mynginx   ClusterIP   172.30.78.164   <none>        8080/TCP   54s

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/mynginx   0/2     2            0           7m6s

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/mynginx-6448d57877   2         2         0       7m6s
[student@workstation ~]$ vim deploy.yml 
[student@workstation ~]$ vim service.yml 
[student@workstation ~]$ mkdir custom
[student@workstation ~]$ cd custom
[student@workstation custom]$ mkdir base
[student@workstation custom]$ cd base
[student@workstation base]$ cp ~/*.yml
[student@workstation base]$ cp ~/*.yml .
[student@workstation base]$ 
[student@workstation base]$ ls
deploy.yml  service.yml
[student@workstation base]$ ll
total 8
-rw-r--r--. 1 student student 933 Aug 22 05:13 deploy.yml
-rw-r--r--. 1 student student 933 Aug 22 05:13 service.yml
[student@workstation base]$ vim kustomization.yaml
[student@workstation base]$ ll
total 12
-rw-r--r--. 1 student student 933 Aug 22 05:13 deploy.yml
-rw-r--r--. 1 student student 152 Aug 22 05:16 kustomization.yaml
-rw-r--r--. 1 student student 933 Aug 22 05:13 service.yml
[student@workstation base]$ vim kustomization.yaml
[student@workstation base]$ vim kustomization.yaml
[student@workstation base]$ vim kustomization.yaml
[student@workstation base]$ cd ..
[student@workstation custom]$ mkdir overlays
[student@workstation custom]$ cd overla
bash: cd: overla: No such file or directory
[student@workstation custom]$ cd overlays/
[student@workstation overlays]$ mkdir production
[student@workstation overlays]$ cd production/
[student@workstation production]$ Kustomization.yaml
bash: Kustomization.yaml: command not found...
Failed to search for file: GDBus.Error:org.freedesktop.DBus.Error.NameHasNoOwner: Could not activate remote peer.
[student@workstation production]$ vim kustomization.yaml
[student@workstation production]$ rm kustomization.yaml 
[student@workstation production]$ vim kustomization.yaml
[student@workstation production]$ vim ~/deploy.yml 
[student@workstation production]$ vim kustomization.yaml
[student@workstation production]$ vim ~/deploy.yml 
[student@workstation production]$ vim kustomization.yaml
[student@workstation production]$ vim kustomization.yaml
[student@workstation production]$ cd ../../
[student@workstation custom]$ cd bas
bash: cd: bas: No such file or directory
[student@workstation custom]$ cd base/
[student@workstation base]$ vim kustomization.yaml 
[student@workstation base]$ ls
deploy.yml  kustomization.yaml  service.yml
[student@workstation base]$ vim deploy.yml 
[student@workstation base]$ vim service.yml 
[student@workstation base]$ cd ..
[student@workstation custom]$ oc kustomize base
error: accumulating resources: accumulation err='merging resources from 'service.yml': may not add resource with an already registered id: Deployment.v1.apps/mynginx.classc': must build at directory: '/home/student/custom/base/service.yml': file is not directory
[student@workstation custom]$ cat base/
cat: base/: Is a directory
[student@workstation custom]$ cd ba
bash: cd: ba: No such file or directory
[student@workstation custom]$ base
bash: base: command not found...
Failed to search for file: GDBus.Error:org.freedesktop.DBus.Error.NameHasNoOwner: Could not activate remote peer.
[student@workstation custom]$ cd base
[student@workstation base]$ ls
deploy.yml  kustomization.yaml  service.yml
[student@workstation base]$ ll
total 12
-rw-r--r--. 1 student student 953 Aug 22 05:34 deploy.yml
-rw-r--r--. 1 student student 128 Aug 22 05:33 kustomization.yaml
-rw-r--r--. 1 student student 953 Aug 22 05:34 service.yml
[student@workstation base]$ cat service.yml 
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"mynginx","creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mynginx"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"containers":[{"name":"hello-worls-nginx","image":"quay.io/redhattraining/hello-worls-nginx","resources":{}}]}},"strategy":{}},"status":{}}
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mynginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mynginx
    spec:
      containers:
      - image: quay.io/redhattraining/hello-worls-nginx
        name: hello-worls-nginx
        resources: {}
status: {}
[student@workstation base]$ cd ..
[student@workstation custom]$ oc kustomize base
error: accumulating resources: accumulation err='merging resources from 'service.yml': may not add resource with an already registered id: Deployment.v1.apps/mynginx.classc': must build at directory: '/home/student/custom/base/service.yml': file is not directory
[student@workstation custom]$ oc kustomize base/
error: accumulating resources: accumulation err='merging resources from 'service.yml': may not add resource with an already registered id: Deployment.v1.apps/mynginx.classc': must build at directory: '/home/student/custom/base/service.yml': file is not directory
[student@workstation custom]$ cd  base/
[student@workstation base]$ ls
deploy.yml  kustomization.yaml  service.yml
[student@workstation base]$ vim service.yml
[student@workstation base]$ vim kustomization.yaml 
[student@workstation base]$ ll
total 12
-rw-r--r--. 1 student student 953 Aug 22 05:34 deploy.yml
-rw-r--r--. 1 student student 128 Aug 22 05:46 kustomization.yaml
-rw-r--r--. 1 student student 953 Aug 22 05:45 service.yml
[student@workstation base]$ [student@workstation ~]$ lab start auth-providers 
FAIL    Waiting for cluster ll
                            cd  base/
bash: cd: base/: No such file or directory
[student@workstation base]$ ls
deploy.yml  kustomization.yaml  service.yml
[student@workstation base]$ vim kustomization.yaml 
[student@workstation base]$ vim kustomization.yaml 
[student@workstation base]$ oc kustomize base
error: must build at directory: not a valid directory: evalsymlink failure on 'base' : lstat /home/student/custom/base/base: no such file or directory
[student@workstation base]$ cd ..
[student@workstation custom]$ oc kustomize base
error: accumulating resources: accumulation err='merging resources from 'service.yml': may not add resource with an already registered id: Deployment.v1.apps/mynginx.classc': must build at directory: '/home/student/custom/base/service.yml': file is not directory
[student@workstation custom]$ oc kustomize base
error: accumulating resources: accumulation err='merging resources from 'service.yml': may not add resource with an already registered id: Deployment.v1.apps/mynginx.classc': must build at directory: '/home/student/custom/base/service.yml': file is not directory
[student@workstation custom]$ vim base/service.yml
[student@workstation custom]$ cd base/
[student@workstation base]$ cat kustomization.yaml 
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: classc
resources:
  - deploy.yml
  - service.yml
[student@workstation base]$ ll
total 12
-rw-r--r--. 1 student student 953 Aug 22 05:34 deploy.yml
-rw-r--r--. 1 student student 128 Aug 22 05:48 kustomization.yaml
-rw-r--r--. 1 student student 953 Aug 22 05:50 service.yml
[student@workstation base]$ cat deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"mynginx","creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mynginx"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"containers":[{"name":"hello-worls-nginx","image":"quay.io/redhattraining/hello-worls-nginx","resources":{}}]}},"strategy":{}},"status":{}}
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mynginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mynginx
    spec:
      containers:
      - image: quay.io/redhattraining/hello-worls-nginx
        name: hello-worls-nginx
        resources: {}
status: {}
[student@workstation base]$ cat service.yml 
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"mynginx","creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mynginx"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"containers":[{"name":"hello-worls-nginx","image":"quay.io/redhattraining/hello-worls-nginx","resources":{}}]}},"strategy":{}},"status":{}}
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mynginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mynginx
    spec:
      containers:
      - image: quay.io/redhattraining/hello-worls-nginx
        name: hello-worls-nginx
        resources: {}
status: {}
[student@workstation base]$ vim service.yml 
[student@workstation base]$ cd ..
[student@workstation custom]$ cd ..
[student@workstation ~]$ vim service.yml 
[student@workstation ~]$ history
    1  sudo reboot
    2  lab start auth-providers 
    3  oc whoami
    4  oc login
    5  oc login -u admin -p redhatocp https://api.ocp4.example.com:6443
    6  oc whoami
    7  oc whoami -t
    8  oc login -u developer -p developer
    9  cat .kube/config 
   10  oc login -u admin -p redhatocp
   11  cat .kube/config 
   12  oc new-project classA
   13  oc new-project classa
   14  oc get all
   15  oc new-app --name myweb --image quay.io/redhattraining/hello-world-nginx
   16  oc get all
   17  oc describe deployment myweb 
   18  oc get pods
   19  oc get pods -o wide
   20  oc edit deployment myweb
   21  oc get pods
   22  oc get all
   23  oc describe deployment myweb
   24  oc describe pod myweb-7b4f54c5d6-hlfzs myweb-7b4f54c5d6-qdfgj 
   25  oc describe pod myweb-7b4f54c5d6-hlfzs
   26  oc describe pod myweb-7b4f54c5d6-hlfzs | grep ip
   27  oc describe pod myweb-7b4f54c5d6-qdfgj | grep ip
   28  oc delete pod myweb-7b4f54c5d6-qdfgj 
   29  oc get pod
   30  oc describe pod myweb-7b4f54c5d6-vlmrw | grep ip
   31  oc get svc
   32  oc get endpoints
   33  curl 10.8.0.109:8080
   34  oc expose service myweb
   35  oc get route
   36  curl myweb-classa.apps.ocp4.example.com
   37  oc get all
   38  oc get sa
   39  oc describe route myweb 
   40  oc describe deployment myweb | grep -i labels
   41  oc describe service myweb | grep -i labels
   42  oc new-project classb
   43  oc get all
   44  oc get pods -n classa
   45  oc edit deployment myweb -n classa
   46  oc get pods -n classa
   47  oc project classa
   48  vim password
   49  oc create secret generic mysecret --from-literal passwd=redhat
   50  oc get secrets
   51  oc describe secrets mysecret 
   52  oc create secret generic mysecret1 --from-file secret=password
   53  oc describe secrets mysecret1 
   54  oc create configmap myconfig --from-literal CONFIG=dummyconfig
   55  oc describe myconfig  myconfig
   56  oc describe configmap  myconfig
   57  oc get pods
   58  oc create sa myserviceaccount
   59  oc get sa
   60  oc get all
   61  oc project classb
   62  oc create deployment mynginx --image quay.io/redhattraining/hello-worls-nginx --save-config --dry-run client -o yaml > deploy.yml
   63  oc create deployment --name mynginx --image quay.io/redhattraining/hello-worls-nginx --save-config --dry-run client -o yaml > deploy.yml
   64  oc create deployment mynginx --image quay.io/redhattraining/hello-worls-nginx --save-config --dry-run=client -o yaml > deploy.yml
   65  ls
   66  cat deploy.yml 
   67  oc create -f deploy.yml 
   68  oc get all
   69  vim deploy.yml 
   70  oc apply -f deploy.yml 
   71  oc get all
   72  oc create service clusterip mynginx --tcp 8080:8080 --save-config dry-run=client -o yml > service.yml
   73  oc create service clusterip mynginx --tcp 8080:8080 --save-config dry-run=client -o yaml > service.yml
   74  oc create service clusterip mynginx --tcp 8080:8080 --save-config --dry-run=client -o yaml > service.yml
   75  oc get svc
   76  oc create -f service.yml
   77  oc get svc
   78  oc get all
   79  vim deploy.yml 
   80  vim service.yml 
   81  mkdir custom
   82  cd custom
   83  mkdir base
   84  cd base
   85  cp ~/*.yml
   86  cp ~/*.yml .
   87  ls
   88  ll
   89  vim kustomization.yaml
   90  ll
   91  vim kustomization.yaml
   92  cd ..
   93  mkdir overlays
   94  cd overla
   95  cd overlays/
   96  mkdir production
   97  cd production/
   98  Kustomization.yaml
   99  vim kustomization.yaml
  100  rm kustomization.yaml 
  101  vim kustomization.yaml
  102  vim ~/deploy.yml 
  103  vim kustomization.yaml
  104  vim ~/deploy.yml 
  105  vim kustomization.yaml
  106  cd ../../
  107  cd bas
  108* 
  109  vim kustomization.yaml 
  110  ls
  111  vim deploy.yml 
  112  vim service.yml 
  113  cd ..
  114  oc kustomize base
  115  cat base/
  116  cd ba
  117  base
  118  cd base
  119  ls
  120  ll
  121  cat service.yml 
  122  cd ..
  123  oc kustomize base
  124  oc kustomize base/
  125  cd  base/
  126  ls
  127  vim service.yml
  128  vim kustomization.yaml 
  129  ll
  130  cd  base/
  131  ls
  132  vim kustomization.yaml 
  133  oc kustomize base
  134  cd ..
  135  oc kustomize base
  136  vim base/service.yml
  137  cd base/
  138  cat kustomization.yaml 
  139  ll
  140  cat deploy.yml
  141  cat service.yml 
  142  vim service.yml 
  143  cd ..
  144  vim service.yml 
  145  history
[student@workstation ~]$ !74
oc create service clusterip mynginx --tcp 8080:8080 --save-config --dry-run=client -o yaml > service.yml
[student@workstation ~]$ cat service.yml
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
spec:
  ports:
  - name: 8080-8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: mynginx
  type: ClusterIP
status:
  loadBalancer: {}
[student@workstation ~]$ cp service.yml custom/base/
[student@workstation ~]$ cd custom/base/
[student@workstation base]$ vim service.yml
[student@workstation base]$ cd ..
[student@workstation custom]$ oc kustomize base
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  ports:
  - name: 8080-8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: mynginx
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"mynginx","creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mynginx"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"containers":[{"name":"hello-worls-nginx","image":"quay.io/redhattraining/hello-worls-nginx","resources":{}}]}},"strategy":{}},"status":{}}
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mynginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mynginx
    spec:
      containers:
      - image: quay.io/redhattraining/hello-worls-nginx
        name: hello-worls-nginx
        resources: {}
status: {}
[student@workstation custom]$ oc kustomize overlays/production/
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  ports:
  - name: 8080-8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: mynginx
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"mynginx","creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mynginx"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"containers":[{"name":"hello-worls-nginx","image":"quay.io/redhattraining/hello-worls-nginx","resources":{}}]}},"strategy":{}},"status":{}}
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mynginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mynginx
    spec:
      containers:
      - image: quay.io/redhattraining/hello-worls-nginx
        name: hello-worls-nginx
        resources: {}
status: {}
[student@workstation custom]$ oc new-project classc
Now using project "classc" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation custom]$ oc apply -k base/
service/mynginx created
deployment.apps/mynginx created
[student@workstation custom]$ oc get pods
NAME                       READY   STATUS         RESTARTS   AGE
mynginx-6448d57877-dqjbg   0/1     ErrImagePull   0          14s
mynginx-6448d57877-xbdd6   0/1     ErrImagePull   0          14s
[student@workstation custom]$ vim base/kustomization.yaml 
[student@workstation custom]$ vim base/kustomization.yaml 
[student@workstation custom]$ vim base/deploy.yml 
[student@workstation custom]$ oc apply -k base/
service/mynginx configured
deployment.apps/mynginx configured
[student@workstation custom]$ oc get pods
NAME                       READY   STATUS              RESTARTS   AGE
mynginx-557bc5cfc9-j56rn   0/1     ContainerCreating   0          4s
mynginx-6448d57877-dqjbg   0/1     ImagePullBackOff    0          2m37s
mynginx-6448d57877-xbdd6   0/1     ImagePullBackOff    0          2m37s
[student@workstation custom]$ oc get pods -w
NAME                       READY   STATUS    RESTARTS   AGE
mynginx-557bc5cfc9-c6p6s   1/1     Running   0          7s
mynginx-557bc5cfc9-j56rn   1/1     Running   0          12s
^[c^X^C[student@workstation custom]$ oc apply -k overlays/production/
service/mynginx configured
deployment.apps/mynginx configured
[student@workstation custom]$ oc get pods
NAME                       READY   STATUS    RESTARTS   AGE
mynginx-557bc5cfc9-c6p6s   1/1     Running   0          34s
mynginx-557bc5cfc9-j56rn   1/1     Running   0          39s
mynginx-557bc5cfc9-vhwdq   1/1     Running   0          6s
[student@workstation custom]$ cd overlays/
[student@workstation overlays]$ ls
production
[student@workstation overlays]$ mkdir test
[student@workstation overlays]$ cp production/kustomization.yaml test/
[student@workstation overlays]$ cd test/
[student@workstation test]$ vim kustomization.yaml 
[student@workstation test]$ cd ..
[student@workstation overlays]$ cd ..
[student@workstation custom]$ oc kustomize overlays/test/
apiVersion: v1
data:
  MYNAME: c3VuZGFy
kind: Secret
metadata:
  name: secret1-g6b5tkh2t2
  namespace: classc
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  ports:
  - name: 8080-8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: mynginx
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"mynginx","creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mynginx"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mynginx"}},"spec":{"containers":[{"name":"hello-worls-nginx","image":"quay.io/redhattraining/hello-worls-nginx","resources":{}}]}},"strategy":{}},"status":{}}
  creationTimestamp: null
  labels:
    app: mynginx
  name: mynginx
  namespace: classc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mynginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mynginx
    spec:
      containers:
      - image: quay.io/redhattraining/hello-world-nginx
        name: hello-world-nginx
        resources: {}
status: {}
[student@workstation custom]$ oc apply -k overlays/test/
secret/secret1-g6b5tkh2t2 created
service/mynginx configured
deployment.apps/mynginx configured
[student@workstation custom]$ oc get secrets
NAME                       TYPE                                  DATA   AGE
builder-dockercfg-vkh4z    kubernetes.io/dockercfg               1      10m
builder-token-46mqm        kubernetes.io/service-account-token   4      10m
default-dockercfg-ptxpc    kubernetes.io/dockercfg               1      10m
default-token-qlbzp        kubernetes.io/service-account-token   4      10m
deployer-dockercfg-mpgrr   kubernetes.io/dockercfg               1      10m
deployer-token-khp2r       kubernetes.io/service-account-token   4      10m
secret1-g6b5tkh2t2         Opaque                                1      8s
[student@workstation custom]$ 
